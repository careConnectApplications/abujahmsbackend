name: Build and Deploy React App to Remote Server

#on:
  #push:
   # branches: [prod] #trigger for push to staging
  #pull_request:
   # branches: [prod] # trigger for pull request to staging

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify the Node.js version

      #- name: Install dependencies
      #  run: npm install

      # Step 3: Build the ndejs
      #- name: Build nodejs app
      #  run: npm run build
      # Step 4: Verify if build directory exists
      - name: Check if src directory exists
        run: |
          echo "Listing files in the repository:"
          ls -alh
          if [ ! -d "./src" ]; then
            echo "src directory not found, aborting deployment."
            exit 1
          else
            echo "src directory found."
          fi
      - name: Random delay before deployment
        run: sleep 360
      # Step 5: Deploy to remote server via SSH
      - name: Deploy to remote server
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME_LIVE }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP_LIVE }}
        run: |
          # Install SSH pass to use password for SSH
          sudo apt-get update
          sudo apt-get install -y sshpass

          # Deploy build to the server using SCP
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r ./src ./downloads ./package.json ./tsconfig.json "$SSH_USERNAME"@"$SERVER_IP":/home/hms/ghknkhmsbackend

          # Optionally restart your app after copying the build
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USERNAME"@"$SERVER_IP" << 'EOF'
            # Stop any existing server (optional)
            #pm2 stop 3
            # server commands (or your app, depending on your setup)
            cd /home/hms/ghknkhmsbackend
            npm install
            npm run build
            #pm2 --name "kastina" start /home/hms/hmsbackend/build/index.js

          EOF
